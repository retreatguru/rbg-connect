#!/bin/bash

MARKER=.dev.build

main() {
    cd $(dirname $0)

    if [ ! -f ".env" ]; then
        cp .env.default .env
    fi

    COMMAND=$1
    shift
    case $COMMAND in
        up)
            if [ -f $MARKER ] && [ "$1" != "--build" ]; then
                docker-compose up -d
            else
                build
            fi
            ;;
        down)
            docker-compose down
            ;;
        clean)
            clean
            ;;
        shell)
            docker-compose exec wordpress bash "$@"
            ;;
        test)
            if [ ! $1 ]; then
                set -- "--help"
            fi
            docker-compose exec wordpress codecept.sh run --env docker "$@"
            ;;
        debug)
            if [ ! "$1" ]; then
                echo "usage $0 debug <on|off>"
                exit 1
            fi
            HOST=$(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | head -1 | awk '{print $2}')
            docker-compose exec wordpress xdebug.sh $1 $HOST 9000
            docker-compose restart wordpress
            ;;
        *)
            cat <<EOF
Development Environment Manager

Usage: $0 <command> [options]

The following commands are supported:

up       Start development environment (builds if necessary)
down     Destroy development environment (also clears the DB)
clean    Destroy development environment and all data
shell    Enter wordpress container shell
debug    Turn debugging (xdebug) on or off
EOF
            exit 1
            ;;
    esac
}

# run a wp-cli command
wp() {
    docker-compose exec --user=noroot wordpress wp "$@"
}

# build wordpress and link in the theme
build() {
    # start containers and setup wordpress
    docker-compose up --build -d
    docker-compose exec wordpress wait-db.sh
    docker-compose exec --user=noroot wordpress composer install -d ../programs-remote-tests
    docker-compose exec --user=noroot wordpress configure-wordpress.sh

    echo "Remember to add rgconnect.dev to your /etc/hosts file"

    touch $MARKER
}

# remove containers, volumes, db cache and wordpress
clean() {
    docker-compose down --volumes
    git clean -xdf html/
    rm $MARKER
}

main "$@"
